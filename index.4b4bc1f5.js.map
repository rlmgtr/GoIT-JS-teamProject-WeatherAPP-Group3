{"mappings":"AA2BA,SAASA,uBAAuBC,GAC5B,IAAMC,EAAeC,aAAaC,QAAQ,gBACpCC,EAAcC,SAASC,eAAe,eACxCL,IAAiBD,GACjBI,EAAYG,UAAY,YACxBH,EAAYI,UAAW,IAEvBJ,EAAYG,UAAY,WACxBH,EAAYI,UAAW,E,CAI/B,SAASC,kBACL,OAAOJ,SAASK,cAAc,8BAA8BC,K,CAGhE,SAASC,oBAAoBZ,GACzB,IAAMa,EAAOJ,kBAEPK,EAAS,qDAAmEC,OAAdf,EAAK,WAAyBe,OADnF,mCAC0E,WAAcA,OAALF,GAElGG,MAAMF,GACDG,MAAK,SAAAC,G,OAAYA,EAASC,M,IAC1BF,MAAK,SAAAG,GACF,IAAMC,EAAqBD,EAAKE,QAAQ,GAAGC,YACrCC,EAAcJ,EAAKK,KAAKC,KACxBC,EAAOP,EAAKE,QAAQ,GAAGK,KACvBC,EAAU,IAAIC,KAAwB,IAAnBT,EAAKU,IAAIF,SAAgBG,qBAC5CC,EAAS,IAAIH,KAAuB,IAAlBT,EAAKU,IAAIE,QAAeD,qBAC1CE,EAAsB,WAATpB,EAAoB,KAAQ,KAExCqB,EAAc,iEAEFnB,OADgCY,EAAK,8DAEjCZ,OADJM,EAAmB,0CACDN,OAAdS,GACJT,OADkBkB,EAAW,sCAE9BlB,OADCa,EAAQ,qCACFb,OAAPiB,EAAO,sBAExB3B,SAASC,eAAe,mBAAmB6B,UAAYD,EACvD7B,SAASC,eAAe,YAAYC,UAAYP,EAEhD,IACMoC,GAAc,IAAIP,MAAOQ,wBAAmBC,EADlC,CAAEC,QAAS,OAAQC,KAAM,UAAWC,MAAO,OAAQC,IAAK,YAExErC,SAASC,eAAe,eAAeC,UAAY,SAAqBQ,OAAZqB,GAE5DrC,uBAAuBC,E,IAE1B2C,OAAM,SAAAC,GACHC,QAAQD,MAAM,+BAAgCA,GAC9CvC,SAASC,eAAe,mBAAmBC,UAAY,8BACvDF,SAASC,eAAe,eAAeC,UAAY,E,IA7EhEF,SAASyC,iBAAiB,oBAAoB,WAC1C,IACM7C,EAAeC,aAAaC,QAAQ,iBADtB,UAEpBS,oBAAoBX,GACpBF,uBAAuBE,E,IAG3BI,SAASC,eAAe,cAAcwC,iBAAiB,UAAU,SAASC,GACtEA,EAAEC,iBAEFpC,oBADaP,SAASC,eAAe,aAAaK,M,IAItDN,SAASC,eAAe,eAAewC,iBAAiB,SAAS,WAC7D,IAAM9C,EAAOK,SAASC,eAAe,YAAYC,UACjDL,aAAa+C,QAAQ,eAAgBjD,GACrCkD,MAAM,GAAQnC,OAALf,EAAK,uCACdD,uBAAuBC,E,IAG3BK,SAAS8C,iBAAiB,sBAAsBC,SAAQ,SAAAC,GACpDA,EAAMP,iBAAiB,UAAU,WAE7BlC,oBADaP,SAASC,eAAe,aAAaK,OAAST,aAAaC,QAAQ,iBAAmB,U","sources":["src/today.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\n    const defaultCity = 'Balanga';\n    const favoriteCity = localStorage.getItem('favoriteCity') || defaultCity;\n    fetchCurrentWeather(favoriteCity);\n    setFavoriteButtonState(favoriteCity);\n});\n\ndocument.getElementById('searchForm').addEventListener('submit', function(e) {\n    e.preventDefault();\n    const city = document.getElementById('cityInput').value;\n    fetchCurrentWeather(city);\n});\n\ndocument.getElementById('favoriteBtn').addEventListener('click', function() {\n    const city = document.getElementById('cityName').innerText;\n    localStorage.setItem('favoriteCity', city);\n    alert(`${city} has been added to your favorites!`);\n    setFavoriteButtonState(city);\n});\n\ndocument.querySelectorAll('input[name=\"unit\"]').forEach(radio => {\n    radio.addEventListener('change', function() {\n        const city = document.getElementById('cityInput').value || localStorage.getItem('favoriteCity') || 'Balanga';\n        fetchCurrentWeather(city);\n    });\n});\n\nfunction setFavoriteButtonState(city) {\n    const favoriteCity = localStorage.getItem('favoriteCity');\n    const favoriteBtn = document.getElementById('favoriteBtn');\n    if (favoriteCity === city) {\n        favoriteBtn.innerText = 'Favorited';\n        favoriteBtn.disabled = true;\n    } else {\n        favoriteBtn.innerText = 'Favorite';\n        favoriteBtn.disabled = false;\n    }\n}\n\nfunction getSelectedUnit() {\n    return document.querySelector('input[name=\"unit\"]:checked').value;\n}\n\nfunction fetchCurrentWeather(city) {\n    const unit = getSelectedUnit();\n    const apiKey = 'f1a7f601f87c9d97579ef8237cc83ff1';\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${unit}`;\n\n    fetch(apiUrl)\n        .then(response => response.json())\n        .then(data => {\n            const weatherDescription = data.weather[0].description;\n            const temperature = data.main.temp;\n            const icon = data.weather[0].icon;\n            const sunrise = new Date(data.sys.sunrise * 1000).toLocaleTimeString();\n            const sunset = new Date(data.sys.sunset * 1000).toLocaleTimeString();\n            const unitSymbol = unit === 'metric' ? '°C' : '°F';\n\n            const weatherInfo = `\n                <img src=\"https://openweathermap.org/img/wn/${icon}@2x.png\" alt=\"Weather icon\">\n                <p>Weather: ${weatherDescription}</p>\n                <p>Temperature: ${temperature}${unitSymbol}</p>\n                <p>Sunrise: ${sunrise}</p>\n                <p>Sunset: ${sunset}</p>\n            `;\n            document.getElementById('currentforecast').innerHTML = weatherInfo;\n            document.getElementById('cityName').innerText = city;\n\n            const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n            const currentDate = new Date().toLocaleDateString(undefined, options);\n            document.getElementById('currentdate').innerText = `Date: ${currentDate}`;\n\n            setFavoriteButtonState(city);\n        })\n        .catch(error => {\n            console.error('Error fetching weather data:', error);\n            document.getElementById('currentforecast').innerText = 'Error fetching weather data';\n            document.getElementById('currentdate').innerText = '';\n        });\n}\n"],"names":["setFavoriteButtonState","city","favoriteCity","localStorage","getItem","favoriteBtn","document","getElementById","innerText","disabled","getSelectedUnit","querySelector","value","fetchCurrentWeather","unit","apiUrl","concat","fetch","then","response","json","data","weatherDescription","weather","description","temperature","main","temp","icon","sunrise","Date","sys","toLocaleTimeString","sunset","unitSymbol","weatherInfo","innerHTML","currentDate","toLocaleDateString","undefined","weekday","year","month","day","catch","error","console","addEventListener","e","preventDefault","setItem","alert","querySelectorAll","forEach","radio"],"version":3,"file":"index.4b4bc1f5.js.map"}